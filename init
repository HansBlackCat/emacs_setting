;;; Package --- Summary
;;; Commentary:

;; ~/.emacs.d/git
;; rtags,

;;; Code:

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (ivy-rtags company-rtags flycheck-rtags rtags use-package flycheck exec-path-from-shell company-quickhelp company smex evil ivy-explorer ivy ##))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; ========================================
;; Hook
;; ========================================

;; ex) ((load-file "~/.emacs.d/config/c-mode-common.el")

;; (load-file "~/.emacs.d/config/cpp-setting")


;; ========================================
;; Custom AddOn
;; ========================================

;; ----------------------------------------
;; Package Management
;; ----------------------------------------

(require 'package)
(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
(package-refresh-contents)


;; ----------------------------------------
;; Download Package
;; ----------------------------------------

;; wind move
;; https://www.emacswiki.org/emacs/WindMove
(when (fboundp 'windmove-default-keybindings)
  (windmove-default-keybindings))

;; ivy
(unless (package-installed-p 'ivy)
  (package-install 'ivy))

;; evil
(unless (package-installed-p 'evil)
  (package-install 'evil))

;; smex
;; https://github.com/nonsequitur/smex
(unless (package-installed-p 'smex)
  (package-install 'smex))

;; company
;; https://company-mode.github.io
(unless (package-installed-p 'company)
  (package-install 'company))

;; company-quickhelp
;; https://github.com/company-mode/company-quickhelp
(unless (package-installed-p 'company-quickhelp)
  (package-install 'company-quickhelp))


;; exec-path-from-shell
;; https://github.com/purcell/exec-path-from-shell
(unless (package-installed-p 'exec-path-from-shell)
  (package-install 'exec-path-from-shell))
;; Only if Mac
;; exec-path-from-shell
;; https://github.com/purcell/exec-path-from-shell
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))

;; flycheck
;; https://github.com/flycheck/flycheck
(unless (package-installed-p 'flycheck)
  (package-install 'flycheck))

;; use-package
;; https://github.com/jwiegley/use-package
(unless (package-installed-p 'use-package)
  (package-install 'use-package))


;; ****************
;; ****** Cp ******
;; ****************


;; rtags
;; https://github.com/Andersbakken/rtags
;; https://github.com/Andersbakken/rtags/wiki/Installing-RTags
(unless (package-installed-p 'rtags)
  (package-install 'rtags))
;; flycheck-rtags
(unless (package-installed-p 'flycheck-rtags)
  (package-install 'flycheck-rtags))
;; company-rtags
(unless (package-installed-p 'company-rtags)
  (package-install 'company-rtags))
;; ivy-rtags
(unless (package-installed-p 'ivy-rtags)
  (package-install 'ivy-rtags))
;; 


;; ----------------------------------------
;; Setting
;; ----------------------------------------

;; << Evil >>
;; Enable Evil
(require 'evil)
(evil-mode 1)

;; << Smex >>
;; Smex
(require 'smex) ; Not needed if you use package.el
(smex-initialize) ; Can be omitted. This might cause a (minimal) delay
		; when Smex is auto-initialized on its first run.

(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

;; <<Company>>
;; -- company --
;; Enable
(require 'company)
(add-hook 'after-init-hook 'global-company-mode)

;; -- company-quickhelp --
;; Enable
(company-quickhelp-mode)

;; << flycheck >>
;; Support
;; https://www.flycheck.org/en/latest/languages.html#flycheck-languages
(use-package flycheck
  :ensure t
  :init (global-flycheck-mode))

;; << Rtags >>
(use-package rtags
  :init
  (add-hook 'c-mode-common-hook 'rtags-mode)
  ;;(add-hook 'flycheck-mode-hook )
  )
(setq rtags-completions-enabled t)
(push 'company-rtags company-backends)
(define-key c-mode-base-map (kbd "<C-tab>") (function company-complete))


;; ========================================
;; Add-to-List, Additional Preference
;; ========================================

;; C++
(add-to-list 'auto-mode-alist '("\\.h\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.hpp\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.cpp\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.cxx\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.c++\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.hxx\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.hh\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.h++\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.txx\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.tpp\\'" . c++-mode))
(add-to-list 'auto-mode-alist '("\\.inl\\'" . c++-mode))


;;; .emacs ends here
